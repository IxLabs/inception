#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011
# Yokogawa Electric Corporation, YDC Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: v6eval/bin/remotes/manual/route.rmt,v 1.11 2010/03/24 02:42:35 mario Exp $
#
########################################################################
use V6evalRemote;
use File::Basename;

rArg() || goto error;

#$rOpt_addrfamily
#$rOpt_addrtype
#$rOpt_cmd
#$rOpt_gateway
#$rOpt_if
#$rOpt_prefix
#$rOpt_prefixlen
#$rOpt_timeout
#$rOpt_tunnelif
#$rOpt_netmask

$rOpt_addrfamily = "inet6" if ! defined($rOpt_addrfamily);
$rOpt_addrtype = "host" if ! defined($rOpt_addrtype);

my $basename	= basename($0, '.rmt');
my $prompt	= "$basename> ";

print "\n";
print "lio_start". "\n";
print $prompt . "Set Static Route of NUT manually as following:\n\n";

print $prompt . "command          = $rOpt_cmd\n" if ($rOpt_cmd ne undef);
print $prompt . "address family   = $rOpt_addrfamily\n" if ($rOpt_addrfamily ne undef);
print $prompt . "address type     = $rOpt_addrtype\n" if ($rOpt_addrtype ne undef);
print $prompt . "prefix           = $rOpt_prefix\n" if ($rOpt_prefix ne undef);
print $prompt . "prefix length    = $rOpt_prefixlen\n" if ($rOpt_prefixlen ne undef);
print $prompt . "gateway          = $rOpt_gateway\n" if ($rOpt_gateway ne undef);
print $prompt . "netmask          = $rOpt_netmask\n" if ($rOpt_netmask ne undef);
print $prompt . "interface        = $rOpt_if\n" if ($rOpt_if ne undef);
print $prompt . "tunnel interface = $rOpt_tunnelif\n" if ($rOpt_tunnelif ne undef);
print "\n";
print $prompt . "then press enter key.\a\n";
print "lio_stop". "\n";
<STDIN>;


exit($V6evalRemote::exitPass);

error:
    exit($V6evalRemote::exitFail);

########################################################################
sub usage()
{
    print STDERR $prompt . "route.rmt [-commonoption ...] cmd={add,delete} ";
    print STDERR $prompt . "prefix=ADDR gateway=ADDR [timeout=SEC_VALUE]\n";

    print STDERR $prompt . "route.rmt [-commonoption ...] cmd={add,delete} ";
    print STDERR $prompt . "prefix=ADDR prefixlen=LEN gateway=ADDR ";
    print STDERR $prompt . "[timeout=SEC_VALUE]\n";

    print STDERR $prompt . "route.rmt [-commonoption ...] cmd={add,delete} ";
    print STDERR $prompt . "prefix=ADDR prefixlen=LEN gateway=ADDR if=IF ";
    print STDERR $prompt . "[timeout=SEC_VALUE]\n";
}

########################################################################
__END__

=head1 NAME

B<route.rmt> - add/delete route

=head1 SYNOPSIS

B<route.rmt> [-commonoption ...] cmd={add,delete}
prefix=ADDR gateway=ADDR [timeout=SEC_VALUE]

B<route.rmt> [-commonoption ...] cmd={add,delete}
prefix=ADDR prefixlen=LEN gateway=ADDR [timeout=SEC_VALUE]

B<route.rmt> [-commonoption ...] cmd={add,delete}
prefix=ADDR prefixlen=LEN gateway=ADDR if=IF [timeout=SEC_VALUE]

=head1 DESCRIPTION

B<route.rmt> adds/deletes a specific route.
Default timeout value is five seconds.
Do ``perldoc V6evalRemote'' for common options.

B<ifs> option works only if B<target type> is "nec-libra".

=head1 RETURN VALUES

The B<route.rmt> exits with one of the following values:
 0  command completed successfully
 1  command failed

=head1 SEE ALSO

perldoc V6evalRemote

=cut
