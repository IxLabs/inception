#!/usr/bin/perl
# 
# Copyright (C) IPv6 Promotion Council, NTT Advanced Technology Corporation
# (NTT-AT), Yokogwa Electoric Corporation and YASKAWA INFORMATION SYSTEMS
# Corporation All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with
# or without modification, are permitted provided that the following
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which
# is related to this software (hereinafter referred to as "project") nor
# the names of the contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
# notification to the copyrighters. However, using this software for the
# purpose of testing or evaluating any products including merchantable
# products may be permitted without any notification to the copyrighters.
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: v6eval/bin/remotes/manual/mldv2SetRUT.rmt,v 1.2 2010/03/24 02:42:35 mario Exp $
# 
###############################################################################
# FileName : manual/mldv2SetRUT.rmt
BEGIN {}
END   {}

#------------------------------------------------------------------------------
# Include
#------------------------------------------------------------------------------
# Include Module
#use strict;
#use warnings;
use File::Basename;
use V6evalRemote;

#------------------------------------------------------------------------------
# Variable
#------------------------------------------------------------------------------
rArg() || goto error1;
my $basename    = basename($0, '.rmt');
my $prompt      = "$basename> ";
my @arg = split(/,/, ($rOpt_arg));
my %arg = @arg;
my $key;

my @CONF_FOR_RMT = (
	"RV", "QI", "QRI", "SQI", "SQC", "LLQI", "LLQC", "URI", "MLDMODE",
	"SSM_RANGE_P_ADDR", "SSM_RANGE_ST_ADDR", "SSM_RANGE_ED_ADDR",
);

my %CONF_NAME = (
	RV                  => 'Robustness Variable',
	QI                  => 'Query Interval (second)',
	QRI                 => 'Query Response Interval (second)',
	SQI                 => 'Startup Query Interval (second)',
	SQC                 => 'Startup Query Count',
	LLQI                => 'Last Listener Query Interval (second)',
	LLQC                => 'Last Listener Query Count',
	URI                 => 'Unsolicited Report Interval (second)',
	MLDMODE             => 'MLD mode',
	SSM_RANGE_P_ADDR    => 'The address prefix for SSM range',
	SSM_RANGE_ST_ADDR   => 'The SSM minimum address',
	SSM_RANGE_ED_ADDR   => 'The SSM maximum address',
);

#------------------------------------------------------------------------------
# Main Procedure
#------------------------------------------------------------------------------
# autoflush on
$|=1;

# Manual
print "\n";
print "lio_start". "\n"; 
print $prompt . "Please Set up the following values in this test.\n";

foreach $key (@CONF_FOR_RMT) {
	if (defined $arg{$key}) {
		print $prompt . "	$CONF_NAME{$key} => $arg{$key}\n";
	}
}

print $prompt . "Then, please press any key.\n";
print "lio_stop". "\n"; 

# Wait
<STDIN>;

# autoflush off
$|=0;

#------------------------------------------------------------------------------
# Termination
#------------------------------------------------------------------------------
# Exit w/ Pass
exit($V6evalRemote::exitPass);

# EOF
