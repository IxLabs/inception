#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005 Yokogawa Electric Corporation,
# YDC Corporation, IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: v6eval/bin/remotes/freebsd43-i386/tunnel.rmt,v 1.2 2001/11/29 13:48:30 tanaka Exp $
#
########################################################################
use V6evalRemote;

rOpen() || goto error;

$rOpt_timeout=5 if ! defined($rOpt_timeout);

$NUT_TUNNEL_device="gif".$rOpt_if;

if($rOpt_srcaddr eq "" || $rOpt_dstaddr eq "" ) {
    usage();
    goto error;
}

rLogin($rOpt_timeout) || goto error;

if($rOpt_gateway =~ /^fe80/) {
    $rOpt_gateway="$rOpt_gateway%$NUT_TUNNEL_device";
    goto error if $rOpt_gateway eq "";
}

rCommand("/usr/sbin/gifconfig $NUT_TUNNEL_device ".
	 "$rOpt_srcaddr $rOpt_dstaddr",
         $rOpt_timeout) || goto error;
#
# FreeBSD depend version
#
rCommand("/sbin/route add ".
	 "-$rOpt_addrfamily ".
	 "$rOpt_prefix ".
	 "-prefixlen $rOpt_routeprefixlen ".
	 "-interface $NUT_TUNNEL_device",
	 $rOpt_timeout) || goto error;

#
# KAME generic version (not work)
#
#rCommand("/sbin/route add ".
#	 "-$rOpt_addrfamily ".
#	 "$rOpt_prefix -prefixlen $rOpt_routeprefixlen ".
#	 "::1",
#	 $rOpt_timeout) || goto error;
#
#rCommand("/sbin/route change ".
#	 "-$rOpt_addrfamily ".
#	 "$rOpt_prefix -prefixlen $rOpt_routeprefixlen ".
#	 "::1 ".
#	 "-ifp $NUT_TUNNEL_device" ,
#	 $rOpt_timeout) || goto error;

rLogout($rOpt_timeout) || goto error;

rClose();
exit($V6evalRemote::exitPass);

error:
    rClose();
    exit($V6evalRemote::exitFail);

########################################################################
sub usage()
{
    print STDERR "tunnel.rmt [-commonoption ...] if=interfaceID ";
    print STDERR "srcaddr=ADDR dstaddr=ADDR [timeout=SEC_VALUE]\n";
}

sub address($)
{
    my($adrs)=@_;
    my(@newadrs)=();
    my(@null)=();

    $adrs=~tr/A-Z/a-z/;
    @adrs=split(/::/, $adrs);
    if($#adrs < 0) {
	print STDERR "Null address\n";
	goto error;
    } elsif($#adrs == 0) {
	#
	# 1:2:3:4:5:6:7:8
	#
	@newadrs=split(/:/, $adrs);
	if($#newadrs != 7) {
	    print STDERR "$adrs; Too few/many ``:''\n";
	    goto error;
	}
    } elsif($#adrs == 1) {
	#
	# ex. 1:2::5:6:7:8
	#
	my(@before)=split(/:/, $adrs[0]);
	my(@after)=split(/:/, $adrs[1]);
	my($x)=6-$#before-$#after;
	if($x <= 0) {
	    print STDERR "$adrs; Too few/many ``:''\n";
	    goto error;
	}

	foreach(@before) {
	    push(@newadrs, $_);
	}
	for($i=0; $i<$x; $i++) {
	    push(@newadrs, 0);
	}
	foreach(@after) {
	    push(@newadrs, $_);
	}

    } else {
	print STDERR "$adrs; Too many ``::''\n";
	goto error;
    }
    print "newadrs=@newadrs\n";
    return(@newadrs);

error:
    return(@null);
}

########################################################################
sub kame_getIdx($$)
{
    my($if, $timeout)=@_;

    rCommand("/usr/bin/netstat -in", $timeout) || return(-1);
    my(@lines)=rCmdOutput();
    shift(@lines); # remove command line
    pop(@lines);   # remove command prompt
    foreach(@lines) {
	#
	# netstat -i
	# fxp0  1500  <Link#3>    00.90.27.14.ce.da
        #			2     0        8     0     0
	# fxp0  1500  10.2.2/27     10.2.2.5
	#			2     0        8     0     0
	# fxp0  1500  fe80:3::290 fe80:3::290:27ff:
	#			2     0        8     0     0
	next if ! /($if)\s+(\d+)\s+<Link#(\d+)>/;
	my($idx)=sprintf("%x", $3);
	return($idx);
    }
    print STDERR "$if: Not found\n";
    return(-1);
}

sub kame_getadrs($$$)
{
    my($adrs, $if, $timeout)=@_;

    @adrs=address($adrs);
    if($#adrs < 7) {
	return("");
    }
    if($adrs[0] eq "fe80") {
	# link-local
	my($idx)=kame_getIdx($if, $timeout);
	goto error if $idx < 0;
	$adrs[1]=$idx;
    }
    my($newadrs)="";
    my($i)=0;
    foreach(@adrs) {
	$newadrs.=":" if $i;
	$newadrs.="$_";
	$i=1;
    }
    return($newadrs);
}

########################################################################
