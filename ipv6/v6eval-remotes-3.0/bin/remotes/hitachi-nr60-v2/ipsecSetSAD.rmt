#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005 Yokogawa Electric Corporation,
# YDC Corporation, IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: v6eval/bin/remotes/hitachi-nr60-v2/ipsecSetSAD.rmt,v 1.5 2001/10/05 06:27:18 masaxmasa Exp $
#
########################################################################
use V6evalRemote;

rOpen() || goto error;
$type=rType();

# set default values

$rOpt_timeout=30 if ! defined($rOpt_timeout);

# check parameters

if ($rOpt_src eq undef || $rOpt_dst eq undef || $rOpt_spi eq undef) {
    print STDERR "src,dst,spi is required\n";
    usage();
    goto error;
}
if ($rOpt_mode !~ /transport|tunnel/) {
    print STDERR "mode must be one of transport|tunnel\n";
    usage();
    goto error;
}
if ($rOpt_protocol !~ /ah|esp|ah-esp/) {
    print STDERR "protocol must be one of ah|esp|ah-esp\n";
    usage();
    goto error;
}

#----------------------------------------------------------------------

if ($rOpt_direction !~ /in|out/) {
    print STDERR "direction must be one of in|out for target type $type\n";
    usage();
    goto error;
}

$ipsgsl6_conf = "$type.ipsgsl6.conf";
$ipsman6_conf = "$type.ipsman6.conf";

$rOpt_spi = oct ($rOpt_spi) if ($rOpt_spi =~ /^0/);

($gsl6cf, $man6cf) = add_aore_nr60_v2();

open(OUT, ">> $ipsgsl6_conf");
print OUT $gsl6cf;
print OUT "####################\n";
close(OUT);
open(OUT, ">> $ipsman6_conf");
print OUT $man6cf;
print OUT "####################\n";
close(OUT);

rClose();
exit($V6evalRemote::exitPass);

error:
    rClose();
    exit($V6evalRemote::exitFail);

exitns:
    rClose();
    exit($V6evalRemote::exitNS);

########################################################################
# hitachi-nr60-v2
#
#  nr60 supports bidirectional symmetric SA only
#  (not support unidirectional SA), but
#  test assumes to set unidirectional SA.
#  So this rmt translates unidirectional SA information to 
#  bidirectional symmetric SA, it's complex a little.
########################################################################
sub add_aore_nr60_v2()
{
    my ($gsl6cf, $man6cf);
    my ($nsrc, $nsrc_plen);
    my ($ndst, $ndst_plen);
    my (%ah_transform);


    ## constant values for ipsman6.conf
    $protocol{"ah"}     = 1;
    $protocol{"esp"}    = 2;
    $protocol{"ah-esp"} = 3;
    $ah_transform{"hmac-md5"} = 2;
    $esp_transform{"des-cbc"} = 1;
    $enc_mode{"tunnel"} = 2;
    $digest_len{"hmac-md5"} = 16;
    $esp_len{"des-cbc"} = 8;

    ## mode check
    if ($rOpt_mode ne "tunnel" ) {
	print STDERR "$rOpt_mode mode not yet supported.\n";
	goto exitns;
    }

    ###############################
    ## select config values
    ##  ( select spi for both *_spi_in and *_spi_out )
    ###############################
    $ah_spi  = 0;
    $esp_spi = 0;
    if ($rOpt_protocol eq "ah" || $rOpt_protocol eq "ah-esp") {
	$ah_spi = $rOpt_spi;
	if ($rOpt_aalgo eq "hmac-md5") {
	    $digest_len = $digest_len{$rOpt_aalgo};
	}
	else {
	    print STDERR "AH algorithm \"$rOpt_aalgo\" not yet supported.\n";
	    goto exitns;
	}
    }
    if ($rOpt_protocol eq "esp" || $rOpt_protocol eq "ah-esp") {
	$esp_spi = $rOpt_spi;
	if ($rOpt_ealgo eq "des-cbc") {
	    $esp_len = $esp_len{$rOpt_ealgo};
	}
	else {
	    print STDERR "ESP encription algorithm \"$rOpt_ealgo\" not yet supported.\n";
	    goto exitns;
	}
	if (defined $rOpt_eauth) {
	    print STDERR "ESP authentication algorithm \"$rOpt_eauth\" not yet supported.\n";
	    goto exitns;
	}
    }

    ## translate unidirectional tunnel SA to bidirectional tunnel SA
    if ($rOpt_direction eq "out") { 
	$src = $rOpt_src;
	$dest = $gw = $dstn = $rOpt_dst;
    }
    else { #in
	$tmp = $rOpt_ndst;
	$rOpt_ndst = $rOpt_nsrc; # swap nsrc, ndst
	$rOpt_nsrc = $tmp;

	$src = $rOpt_dst;
	$dest = $gw = $dstn = $rOpt_src;
    }


    ##################################
    ## ipsgsl6.conf
    ##################################
    ($nsrc, $nsrc_plen) = split('/', $rOpt_nsrc);  # get prefix and prefixlen
    ($ndst, $ndst_plen) = split('/', $rOpt_ndst);

    ## config between network/host and network/host
    $gsl6cf .=
	"ipsecconf:gw-control\n" .
        "-scheme 2\n";
    $gsl6cf .= "-src $nsrc\n";
    $gsl6cf .= "-src_prefixlen $nsrc_plen\n" if defined $nsrc_plen ;
    $gsl6cf .= "-dest $ndst\n";
    $gsl6cf .= "-dest_prefixlen $ndst_plen\n" if defined $ndst_plen ;
    $gsl6cf .=
	"-gw $gw\n" .
        "-ah_spi_out $ah_spi\n" .
        "-esp_spi_out $esp_spi\n";

    ## config between SG and SG
    $gsl6cf .=
	"ipsecconf:gw-control\n" .
        "-scheme 2\n" .
        "-src  $src\n" .
        "-dest $dest\n" .
	"-gw $gw\n" .
        "-ah_spi_out $ah_spi\n" .
        "-esp_spi_out $esp_spi\n";

    ##################################
    ## ipsman6.conf
    ##################################
    $man6cf .= "<begin>\n";
    $man6cf .=
	"dstn:$dstn\n" .
	"protocol:$protocol{$rOpt_protocol}\n" .
	"ah_transform:$ah_transform{$rOpt_aalgo}\n" .
	"esp_transform:$esp_transform{$rOpt_ealgo}\n" .
	"comp_transform:\n" .
	"enc_mode:2\n" .              # 2:tunnel mode only
	"digest_len:$digest_len\n" .
	"ah_key:$rOpt_aalgokey\n" .
	"esp_len:$esp_len\n" .
	"esp_key:$rOpt_ealgokey\n" .
	"replay_prot:0\n" .
	"hmac_algo:1\n" .
	"ah_spi_out:$ah_spi\n" .
	"esp_spi_out:$esp_spi\n" .
	"ah_spi_in:$ah_spi\n" .
        "esp_spi_in:$esp_spi\n";
    $man6cf .= "<end>\n";

    return ($gsl6cf, $man6cf);
}


########################################################################
sub usage()
{
    print STDERR "ipsecSetSAD.rmt [parameters]\n";
    print STDERR "parameters:\n";
    print STDERR "src=source address\n";
    print STDERR "dst=destination address\n";
    print STDERR "spi=SPI\n";
    print STDERR "mode={transport|tunnel}\n";
    print STDERR "protocol={ah|esp|ah-esp}\n";
    print STDERR "aalgo={hmac-md5|hmac-sha1}\n";
    print STDERR "aalgokey=AH algorithm key\n";
    print STDERR "ealgo={des-cbc|3des-cbc|null}\n";
    print STDERR "ealgokey=ESP algorithm key\n";
    print STDERR "eauth={hmac-md5|hmac-sha1}\n";
    print STDERR "eauthkey=ESP authentication key\n";
    print STDERR "padding={sequential|zero|random}\n";
    print STDERR "nsrc=source VPN site address\n";
    print STDERR "ndst=destination VPN site address\n";
}

########################################################################
