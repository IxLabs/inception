#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005 Yokogawa Electric Corporation,
# YDC Corporation, IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: v6eval/bin/remotes/hpux/ipsecSetSAD.rmt,v 1.3 2001/10/10 01:09:29 akisada Exp $
#
########################################################################

use V6evalRemote;

rOpen() || goto error;

# set default values
$rOpt_timeout=30 if ! defined($rOpt_timeout);

# check parameters
if($rOpt_src eq undef || $rOpt_dst eq undef || $rOpt_spi eq undef) {
	print STDERR "src,dst,spi is required\n";
	usage();
	goto error;
}

if($rOpt_mode !~ /transport|tunnel/) {
	print STDERR "mode must be one of transport|tunnel\n";
	usage();
	goto error;
}

########################################################################
# tunnel mode: not support yet
########################################################################

if($rOpt_mode eq "tunnel") {
	goto notsupported;
}

########################################################################

if($rOpt_protocol !~ /ah|esp|ah-esp/) {
	print STDERR "protocol must be one of ah|esp|ah-esp\n";
	usage();
	goto error;
}

#-----------------------------------------------------------------------

# not needed
#if ($rOpt_padding eq "sequential") {
#	goto notsupported;
#} elsif ($rOpt_padding eq "zero") {
#	goto notsupported;
#} elsif ($rOpt_padding eq "random") {
#	goto notsupported;
#}

$cmd = "/usr/bin/cat > /tmp/ipseckey.conf\r";

if($rOpt_protocol eq "ah") {
	$cmd .= add_ah_solaris();
}

if($rOpt_protocol eq "esp") {
	$cmd .= add_esp_solaris();
}

if($rOpt_protocol eq "ah-esp") {
	$cmd .= add_ah_solaris();
	$cmd .= add_esp_solaris();
}

$cmd .= "\cD";

$catsad = "/usr/bin/cat /tmp/ipseckey.conf";
$setsad = "/usr/sbin/ipseckey -f /tmp/ipseckey.conf";
$dmpsad = "/usr/sbin/ipseckey dump";

rLogin($rOpt_timeout) || goto error;
rCommand($cmd, $rOpt_timeout) || goto error;
rCommand($catsad, $rOpt_timeout) || goto error;
rCommand($setsad, $rOpt_timeout) || goto error;
rCommand($dmpsad, $rOpt_timeout) || goto error;
rLogout($rOpt_timeout) || goto error;

rClose();
exit($V6evalRemote::exitPass);

error:
	rClose();
	exit($V6evalRemote::exitFail);

notsupported:
	rClose();
	exit($V6evalRemote::exitNS);

#-----------------------------------------------------------------------

sub add_ah_solaris() {
	my($cmd);
	my($hex);

	$hex = pack("a*", unpack("H*", $rOpt_aalgokey));

	$cmd =
		"add ah ".
		"spi $rOpt_spi ".
		"src $rOpt_src dst $rOpt_dst ".
		"authalg $rOpt_aalgo ".
		"authkey $hex\r";

	return $cmd;
}

#-----------------------------------------------------------------------

sub add_esp_solaris() {
	my($cmd);
	my($hex_auth);
	my($hex_encr);

	$hex_auth = pack("a*", unpack("H*", $rOpt_eauthkey));
	$hex_encr = pack("a*", unpack("H*", $rOpt_ealgokey));

	$cmd = 
		"add esp ".
		"spi $rOpt_spi ".
		"src $rOpt_src dst $rOpt_dst ";

	if($rOpt_eauth ne undef && $rOpt_eauthkey ne undef) {
		$cmd .= "authalg $rOpt_eauth ";
		$cmd .= "authkey $hex_auth ";
	}

	if($rOpt_ealgo eq "null") {
		$cmd .= "encralg null ";
	} else {
		$cmd .= "encralg $rOpt_ealgo ";
		$cmd .= "encrkey $hex_encr ";
	}

        $cmd .= "\r";
	return $cmd;
}

#-----------------------------------------------------------------------

sub usage() {
	print STDERR "ipsecSetSAD.rmt [parameters]\n";
	print STDERR "parameters:\n";
	print STDERR "src=source address\n";
	print STDERR "dst=destination address\n";
	print STDERR "spi=SPI\n";
	print STDERR "mode={transport|tunnel}\n";
	print STDERR "protocol={ah|esp|ah-esp}\n";
	print STDERR "aalgo={hmac-md5|hmac-sha1}\n";
	print STDERR "aalgokey=AH algorithm key\n";
	print STDERR "ealgo={des-cbc|3des-cbc|null}\n";
	print STDERR "ealgokey=ESP algorithm key\n";
	print STDERR "eauth={hmac-md5|hmac-sha1}\n";
	print STDERR "eauthkey=ESP authentication key\n";
	print STDERR "padding={sequential|zero|random}\n";
	print STDERR "nsrc=source VPN site address\n";
	print STDERR "ndst=destination VPN site address\n";
}

########################################################################
