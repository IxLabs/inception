#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005 Yokogawa Electric Corporation,
# YDC Corporation, IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: v6eval/bin/remotes/hpux/manualaddrconf.rmt,v 1.3 2001/10/10 01:09:29 akisada Exp $
#
########################################################################

use V6evalRemote;

$rOpt_timeout = 5 if ! defined $rOpt_timeout;
$rOpt_dadtime = 2 if ! defined $rOpt_dadtime;
$rOpt_addrfamily = "inet6" if ! defined $rOpt_addrfamily;

#$rOpt_addr
#$rOpt_if:1
#$rOpt_type
#$rOpt_len
#$rOpt_netmask

rOpen() || goto error;
rLogin($rOpt_timeout) || goto error;

if ($rOpt_addrfamily eq "inet6") {
    if($rOpt_addr eq "::192.168.0.2") {

# for auto-tunnel configuration
# do nothing

	;
    } elsif ($rOpt_type eq "unicast") {
	rCommand(
		 "/usr/sbin/ifconfig ".
		 "$rOpt_if:1 ".
		 "$rOpt_addrfamily ".
		 "$rOpt_addr prefix $rOpt_len ".
		 "up",
		 15) || goto error;
    } elsif ($rOpt_type eq "anycast") {

#	print "$rOpt_type: not supported type\n";
#	goto notsupported;

        rCommand(
                 "/usr/sbin/ifconfig ".
                 "$rOpt_if:1 ".
                 "$rOpt_addrfamily ".
                 "$rOpt_addr prefix $rOpt_len ".
                 "up",
                 15) || goto error;

# can't up the I/F
# ifconfig lan1:1 inet6 fe80::200:ff:fe00:a0a0 prefix 64 up

    } elsif ($rOpt_type eq "delete") {
	rCommand(
		 "/usr/sbin/ifconfig ".
		 "$rOpt_if:1 ".
		 "$rOpt_addrfamily ".
		 "removeif ".
		 "$rOpt_addr",
		 15) || goto error;
    } else {
	print "$rOpt_type: Unknown type\n";
	goto error;
    }
} elsif ($rOpt_addrfamily eq "inet") {
    if ($rOpt_type eq "add") {
	if ($rOpt_netmask ne "") {
		rCommand(
			 "ifconfig ".
			 "$rOpt_if:1 ".
			 "$rOpt_addrfamily ".
			 "$rOpt_addr ".
			 "netmask $rOpt_netmask ".
			 "up",
			 15) || goto error;
	} else {
		rCommand(
			 "ifconfig ".
			 "$rOpt_if:1 ".
			 "$rOpt_addrfamily ".
			 "$rOpt_addr ".
			 "up",
			 15) || goto error;
	}
    } elsif ($rOpt_type eq "delete") {
	# do nothing
    } else {
	print "$rOpt_type: Unknown type\n";
	goto error;
    }
} else {
    print "$rOpt_addrfamily: Unknown address family\n";
    goto error;
}

rLogout($rOpt_timeout) || goto error;

sleep($rOpt_dadtime);
rClose();
exit($V6evalRemote::exitPass);

error:
    rClose();
    exit($V6evalRemote::exitFail);

notsupported:
    rClose();
    exit($V6evalRemote::exitNS);

########################################################################
