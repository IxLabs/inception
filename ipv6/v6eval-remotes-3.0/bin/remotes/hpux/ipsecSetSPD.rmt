#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005 Yokogawa Electric Corporation,
# YDC Corporation, IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: v6eval/bin/remotes/hpux/ipsecSetSPD.rmt,v 1.3 2001/10/10 01:09:29 akisada Exp $
#
########################################################################

use V6evalRemote;

rOpen() || goto error;

# set default values
$rOpt_timeout=30 if ! defined($rOpt_timeout);
$rOpt_upperspec = "any" if ! defined($rOpt_upperspec);
$rOpt_policy = "ipsec" if ! defined($rOpt_policy);
$rOpt_level = "require" if ! defined($rOpt_level);

# check parameters
if(!defined($rOpt_src) || !defined($rOpt_dst)) {
	print STDERR "src,dst is required\n";
	usage();
	goto error;
}

if($rOpt_policy !~ /ipsec|none|discard/) {
	print STDERR "policy must be one of ipsec|none|discard\n";
	usage();
	goto error;
}

if($rOpt_policy eq "ipsec") {
	if($rOpt_mode !~ /transport|tunnel/) {
		print STDERR "mode must be one of transport|tunnel\n";
		usage();
		goto error;
	}

	if($rOpt_protocol !~ /ah|esp|ah-esp/) {
		print STDERR "protocol must be one of ah|esp|ah-esp\n";
		usage();
		goto error;
	}

	if($rOpt_upperspec !~ /any|tcp|udp/) {
		print STDERR "upperspec must be one of any|tcp|udp\n";
		usage();
		goto error;
	}

	if($rOpt_direction !~ /in|out/) {
		print STDERR "direction must be one of in|out\n";
		usage();
		goto error;
	}

	if($rOpt_level !~ /use|require/) {
		print STDERR "level must be one of use|require\n";
		usage();
		goto error;
	}

	if($rOpt_mode eq "transport") {
		if ($rOpt_tsrc ne undef && $rOpt_tdst ne undef) {
			print STDERR "tsrc,tdst is defined in transport mode\n";
			usage();
			goto error;
		}
	}

########################################################################
# tunnel mode: not support yet
########################################################################
    if($rOpt_mode eq "tunnel") {
#	if ($rOpt_tsrc eq undef || $rOpt_tdst eq undef) {
#	    print STDERR "tsrc,tdst is required in tunnel mode\n";
#	    usage();
#	    goto error;
#	}

	goto notsupported;
    }
########################################################################
}

#-----------------------------------------------------------------------

########################################################################
# Solaris doesn't support "discard".
########################################################################

if($rOpt_policy eq "discard") {
	goto notsupported;
}

########################################################################

$cmd = "/usr/bin/cat > /tmp/ipsecconf.conf\r";

$cmd .= "{saddr $rOpt_src daddr $rOpt_dst";

if($rOpt_upperspec eq "any") {
	$cmd .= "} ";
} else {
	$cmd .= " ulp $rOpt_upperspec} ";
}

if($rOpt_policy eq "none") {
	$cmd .= "bypass ";
} else {
	if($rOpt_direction eq "in") {
		$cmd .= "permit ";
	} elsif($rOpt_direction eq "out") {
		$cmd .= "apply ";
	}
}

if($rOpt_policy eq "ipsec") {
	if($rOpt_protocol eq "ah") {
		$cmd .= "{auth_algs any";
	} elsif ($rOpt_protocol eq "esp") {
		$cmd .= "{encr_algs any encr_auth_algs any";
	} elsif ($rOpt_protocol eq "ah-esp") {
		$cmd .= "{auth_algs any encr_algs any encr_auth_algs any";
	}

	if ($rOpt_direction eq "in") {
		$cmd .= "}\r";
	} elsif ($rOpt_direction eq "out") {
		$cmd .= " sa shared}\r";
	}
} elsif ($rOpt_policy eq "none") {
	if ($rOpt_direction eq "in") {
		$cmd .= "{dir in}\r";
	} elsif ($rOpt_direction eq "out") {
		$cmd .= "{dir out}\r";
	}
}

$cmd .= "\cD" ;

$catspd = "/usr/bin/cat /tmp/ipsecconf.conf";
$setspd = "/usr/sbin/ipsecconf -a /tmp/ipsecconf.conf";
$dmpspd = "/usr/sbin/ipsecconf -ln";

rLogin($rOpt_timeout) || goto error;
rCommand($cmd , $rOpt_timeout) || goto error;
rCommand($catspd , $rOpt_timeout) || goto error;
rCommand($setspd , $rOpt_timeout) || goto error;
rCommand($dmpspd , $rOpt_timeout) || goto error;
rLogout($rOpt_timeout) || goto error;

rClose();
exit($V6evalRemote::exitPass);

notsupported:
	rClose();
	exit($V6evalRemote::exitNS);

error:
	rClose();
	exit($V6evalRemote::exitFail);

#-----------------------------------------------------------------------

sub usage() {
	print STDERR "ipsecSetSPD.rmt [parameters]\n";
	print STDERR "parameters:\n";
	print STDERR "src=source address\n";
	print STDERR "dst=destination address\n";
	print STDERR "upperspec={any|tcp|udp} (default:any)\n";
	print STDERR "direction={in|out}\n";
	print STDERR "protocol={ah|esp|ah-esp}\n";
	print STDERR "mode={transport|tunnel}\n";
	print STDERR "policy={ipsec|none|discard} (default:ipsec)\n";
	print STDERR "tsrc=tunnel entry address\n";
	print STDERR "tdst=tunnel exit address\n";
}

########################################################################
